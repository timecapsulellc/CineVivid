version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build: .
    ports:
      - "8001:8001"
    environment:
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8001
    volumes:
      - ./src/models/videos:/app/src/models/videos
      - ./src/models:/app/src/models
      - ./src/models/assets:/app/src/models/assets
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: uvicorn src.backend.app:app --host 0.0.0.0 --port 8001 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_worker:
    build: .
    environment:
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./src/models/videos:/app/src/models/videos
      - ./src/models:/app/src/models
      - ./src/models/assets:/app/src/models/assets
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: celery -A src.backend.celery_tasks worker --loglevel=info --concurrency=1
    healthcheck:
      test: ["CMD", "celery", "-A", "src.backend.celery_tasks", "inspect", "ping"]
      interval: 60s
      timeout: 10s
      retries: 3

volumes:
  redis_data: